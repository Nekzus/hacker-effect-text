{"version":3,"file":"index.cjs.js","sources":["../src/components/animation/HackerEffectText.tsx"],"sourcesContent":["import React, { ReactNode, useEffect, useState } from \"react\";\n\ninterface HackerEffectTextProps {\n  initialValue: string;\n  targetValue?: string;\n  children: ReactNode;\n  className?: string;\n  capitalize?: boolean;\n}\n\nconst HackerEffectText: React.FC<HackerEffectTextProps> = ({\n  initialValue,\n  targetValue,\n  children,\n  className,\n  capitalize = false,\n}) => {\n  const [lines, setLines] = useState<string[]>(\n    initialValue\n      .split(\"\\n\")\n      .map((line) => (capitalize ? line.toUpperCase() : line))\n  );\n  let interval: NodeJS.Timeout | null = null;\n\n  const capitalizeText = (value: string): string =>\n    capitalize ? value.toUpperCase() : value;\n\n  const calculateIntervalDuration = (text: string): number => {\n    const baseSpeed = 500;\n    return Math.max(baseSpeed / text.length, 20);\n  };\n\n  const startAnimation = () => {\n    let iterations: number[] = Array(lines.length).fill(0);\n\n    if (interval !== null) {\n      clearInterval(interval as unknown as number);\n    }\n\n    const initialText = capitalizeText(initialValue);\n    const targetText = targetValue ? capitalizeText(targetValue) : \"\";\n\n    interval = setInterval(() => {\n      setLines((prevLines) =>\n        prevLines.map((line, lineIndex) => {\n          const currentText = targetText || initialText;\n          return line\n            .split(\"\")\n            .map((_, index) =>\n              index < iterations[lineIndex]\n                ? currentText[index]\n                : String.fromCharCode(65 + Math.floor(Math.random() * 26))\n            )\n            .join(\"\");\n        })\n      );\n\n      if (\n        iterations.every(\n          (iteration, lineIndex) => iteration >= lines[lineIndex].length\n        )\n      ) {\n        clearInterval(interval as unknown as number);\n        setLines((prevLines) =>\n          prevLines.map(() =>\n            targetText ? capitalizeText(targetText) : initialText\n          )\n        );\n      }\n\n      iterations = iterations.map((iteration) => iteration + 1);\n    }, calculateIntervalDuration(initialText));\n  };\n\n  const handleMouseOver = () => startAnimation();\n\n  const handleMouseLeave = () => {\n    clearInterval(interval as unknown as number);\n    setLines(\n      initialValue\n        .split(\"\\n\")\n        .map((line) => (capitalize ? line.toUpperCase() : line))\n    );\n  };\n\n  useEffect(\n    () => () => clearInterval(interval as unknown as number),\n    [interval]\n  );\n\n  return React.cloneElement(\n    children as React.ReactElement,\n    {\n      onMouseOver: handleMouseOver,\n      onMouseLeave: handleMouseLeave,\n    },\n    <div className={className}>\n      {lines.map((line, index) => (\n        <span key={index}>{line}</span>\n      ))}\n    </div>\n  );\n};\n\nexport default HackerEffectText;\n"],"names":["useState","useEffect"],"mappings":"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"}